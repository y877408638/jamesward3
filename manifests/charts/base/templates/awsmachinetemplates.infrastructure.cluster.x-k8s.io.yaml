apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    cert-manager.io/inject-ca-from: {{ .Release.Namespace }}/kurator-serving-cert
    controller-gen.kubebuilder.io/version: v0.7.1-0.20211110210727-ab52f76cc7d1
  labels:
    cluster.x-k8s.io/provider: infrastructure-aws
    cluster.x-k8s.io/v1alpha3: v1alpha3
    cluster.x-k8s.io/v1alpha4: v1alpha4
    cluster.x-k8s.io/v1beta1: v1beta1
  name: awsmachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ0ekNDQXN1Z0F3SUJBZ0lVQ3lxYVFvUktQM1ZtVk52Q0hTazM1UDBnQW5Vd0RRWUpLb1pJaHZjTkFRRUwKQlFBd1hERUxNQWtHQTFVRUJoTUNlSGd4Q2pBSUJnTlZCQWdNQVhneENqQUlCZ05WQkFjTUFYZ3hDakFJQmdOVgpCQW9NQVhneENqQUlCZ05WQkFzTUFYZ3hDekFKQmdOVkJBTU1BbU5oTVJBd0RnWUpLb1pJaHZjTkFRa0JGZ0Y0Ck1CNFhEVEl5TVRFeE1qQTNORFV3TUZvWERUSTNNVEV4TVRBM05EVXdNRm93UmpFWE1CVUdBMVVFQ2hNT2MzbHoKZEdWdE9tMWhjM1JsY25NeEt6QXBCZ05WQkFNTUlpb3VhM1Z5WVhSdmNpMXplWE4wWlcwdWMzWmpMbU5zZFhOMApaWEl1Ykc5allXd3dnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDYThhYk1IVklNCkkxNFp4SDUraHc4SlIwSEVucmlxV0RPMTdTd0hoY21VRHc4emd5d1hwNGdjdTA0SDB6cUFYcTZvNU9hd1lJbFkKSjVsVGloMnBhaGV2K0N5VDhka0pPSURTcE5uMThaZnl2UTkvYVZDdDhiMkJCMTJQcHVwSU1PWEV0dXJ3TFpmMgpCMVlYdzBPQkNJVXVydE96MW9zSlRjZUw1dlUvdkFyNVUvQzN6YVVITFlXTUlQY2tkR2U0dk1FbkdqSjhxUEg0CkxyTUpiZkFnUmZuNmJTQVJQNE01SHYrOVFNTnZjVTY3eWhUcEl0KzlHcU9seG9hbjMzb1J6NnNWeFMwWkFybnEKVm1vWmVZVWJobFhFek5HeXlMQ1UxeWQyY2d0aG1jR1lmb0NwTjFwYW81MUdVWlp5MnRYYWRia3Iraitmdjh0ZQpMOVJrVHgzdzZXaVJBZ01CQUFHamdiSXdnYTh3RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHCkNDc0dBUVVGQndNQ0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJTYXNuK2cKUEtsdnM2RE9KS2FoWWgydFpyRDlOREFmQmdOVkhTTUVHREFXZ0JTeFBxQWovZXNLV2lpemY5c3EwS3Fxd0hsQQpEekF3QmdOVkhSRUVLVEFuZ2hRcUxtdDFjbUYwYjNJdGMzbHpkR1Z0TG5OMlk0SUpiRzlqWVd4b2IzTjBod1IvCkFBQUJNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUIydWNuWlBKV1h5WGVkSDBYdEZreHpoTlhUeU0zdkttREEKSWk4TDViZmNVelh4VUVqb1B5aldYRVR0QVNtbTBNS3NUdTdDK3ptalM4QVNOUWZvRjdVcFM0bGNpakc5TXY0RAp1WEdNZnlJTU1hcUUrRWJFR2NJdWVKMEZBMjVZT2tDdzFza1BFVkdVTERZZENVWE1wMDZ1R2ZsR0hiL0JPMm4rCmMvbk5ZdDR4RmtySEhKaUNZM3FXQkhhN0FLVXAxZHU1bnN6Mm4yK3E5WkN0Nmp3YThKaC9zUlZDZFlDNC9tWVkKTWc5VkFjMDZlcTA2dmFWY1pxZU5UbnR1TGFVY3R2KzkvL2NSTzFncS9wbEFFZ015R2V3YUxYWHptcGNlWnV1RwpmbTlzRDdXeHltSlpXaGdEaFAvUmpwZm1rcHNFaGNUcm1leHJFbTJEZ01QVDVwdWhuQmQwCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        service:
          name: kurator-webhook-service
          namespace: {{ .Release.Namespace }}
          path: /convert
      conversionReviewVersions:
      - v1
      - v1beta1
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: AWSMachineTemplate
    listKind: AWSMachineTemplateList
    plural: awsmachinetemplates
    shortNames:
    - awsmt
    singular: awsmachinetemplate
  scope: Namespaced
  versions:
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        description: AWSMachineTemplate is the Schema for the awsmachinetemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate
            properties:
              template:
                description: AWSMachineTemplateResource describes the data needed
                  to create am AWSMachine from a template
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      additionalSecurityGroups:
                        description: AdditionalSecurityGroups is an array of references
                          to security groups that should be applied to the instance.
                          These security groups would be set in addition to any security
                          groups defined at the cluster level or in the actuator.
                          It is possible to specify either IDs of Filters. Using Filters
                          will cause additional requests to AWS API and if tags change
                          the attached security groups might change too.
                        items:
                          description: AWSResourceReference is a reference to a specific
                            AWS resource by ID, ARN, or filters. Only one of ID, ARN
                            or Filters may be specified. Specifying more than one
                            will result in a validation error.
                          properties:
                            arn:
                              description: ARN of resource
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used
                                to identify a resource They are applied according
                                to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource
                                properties:
                                  name:
                                    description: Name of the filter. Filter names
                                      are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        type: array
                      additionalTags:
                        additionalProperties:
                          type: string
                        description: AdditionalTags is an optional set of tags to
                          add to an instance, in addition to the ones added by default
                          by the AWS provider. If both the AWSCluster and the AWSMachine
                          specify the same tag name with different values, the AWSMachine's
                          value takes precedence.
                        type: object
                      ami:
                        description: AMI is the reference to the AMI from which to
                          create the machine instance.
                        properties:
                          arn:
                            description: ARN of resource
                            type: string
                          filters:
                            description: 'Filters is a set of key/value pairs used
                              to identify a resource They are applied according to
                              the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                            items:
                              description: Filter is a filter used to identify an
                                AWS resource
                              properties:
                                name:
                                  description: Name of the filter. Filter names are
                                    case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter
                                    values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - name
                              - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      cloudInit:
                        description: CloudInit defines options related to the bootstrapping
                          systems where CloudInit is used.
                        properties:
                          insecureSkipSecretsManager:
                            description: InsecureSkipSecretsManager, when set to true
                              will not use AWS Secrets Manager or AWS Systems Manager
                              Parameter Store to ensure privacy of userdata. By default,
                              a cloud-init boothook shell script is prepended to download
                              the userdata from Secrets Manager and additionally delete
                              the secret.
                            type: boolean
                          secretCount:
                            description: SecretCount is the number of secrets used
                              to form the complete secret
                            format: int32
                            type: integer
                          secretPrefix:
                            description: SecretPrefix is the prefix for the secret
                              name. This is stored temporarily, and deleted when the
                              machine registers as a node against the workload cluster.
                            type: string
                          secureSecretsBackend:
                            description: SecureSecretsBackend, when set to parameter-store
                              will utilize the AWS Systems Manager Parameter Storage
                              to distribute secrets. By default or with the value
                              of secrets-manager, will use AWS Secrets Manager instead.
                            enum:
                            - secrets-manager
                            - ssm-parameter-store
                            type: string
                        type: object
                      failureDomain:
                        description: FailureDomain is the failure domain unique identifier
                          this Machine should be attached to, as defined in Cluster
                          API. For this infrastructure provider, the ID is equivalent
                          to an AWS Availability Zone. If multiple subnets are matched
                          for the availability zone, the first one returned is picked.
                        type: string
                      iamInstanceProfile:
                        description: IAMInstanceProfile is a name of an IAM instance
                          profile to assign to the instance
                        type: string
                      imageLookupBaseOS:
                        description: ImageLookupBaseOS is the name of the base operating
                          system to use for image lookup the AMI is not set.
                        type: string
                      imageLookupFormat:
                        description: 'ImageLookupFormat is the AMI naming format to
                          look up the image for this machine It will be ignored if
                          an explicit AMI is set. Supports substitutions for {{.BaseOS}}
                          and {{.K8sVersion}} with the base OS and kubernetes version,
                          respectively. The BaseOS will be the value in ImageLookupBaseOS
                          or ubuntu (the default), and the kubernetes version as defined
                          by the packages produced by kubernetes/release without v
                          as a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example,
                          the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                          will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                          for a Machine that is targeting kubernetes v1.18.0 and the
                          ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                        type: string
                      imageLookupOrg:
                        description: ImageLookupOrg is the AWS Organization ID to
                          use for image lookup if AMI is not set.
                        type: string
                      instanceID:
                        description: InstanceID is the EC2 instance ID for this machine.
                        type: string
                      instanceType:
                        description: 'InstanceType is the type of instance to create.
                          Example: m4.xlarge'
                        type: string
                      networkInterfaces:
                        description: NetworkInterfaces is a list of ENIs to associate
                          with the instance. A maximum of 2 may be specified.
                        items:
                          type: string
                        maxItems: 2
                        type: array
                      nonRootVolumes:
                        description: Configuration options for the non root storage
                          volumes.
                        items:
                          description: Volume encapsulates the configuration options
                            for the storage device
                          properties:
                            deviceName:
                              description: Device name
                              type: string
                            encrypted:
                              description: Encrypted is whether the volume should
                                be encrypted or not.
                              type: boolean
                            encryptionKey:
                              description: EncryptionKey is the KMS key to use to
                                encrypt the volume. Can be either a KMS key ID or
                                ARN. If Encrypted is set and this is omitted, the
                                default AWS key will be used. The key must already
                                exist and be accessible by the controller.
                              type: string
                            iops:
                              description: IOPS is the number of IOPS requested for
                                the disk. Not applicable to all types.
                              format: int64
                              type: integer
                            size:
                              description: Size specifies size (in Gi) of the storage
                                device. Must be greater than the image snapshot size
                                or 8 (whichever is greater).
                              format: int64
                              minimum: 8
                              type: integer
                            type:
                              description: Type is the type of the volume (e.g. gp2,
                                io1, etc...).
                              type: string
                          required:
                          - size
                          type: object
                        type: array
                      providerID:
                        description: ProviderID is the unique identifier as specified
                          by the cloud provider.
                        type: string
                      publicIP:
                        description: 'PublicIP specifies whether the instance should
                          get a public IP. Precedence for this setting is as follows:
                          1. This field if set 2. Cluster/flavor setting 3. Subnet
                          default'
                        type: boolean
                      rootVolume:
                        description: RootVolume encapsulates the configuration options
                          for the root volume
                        properties:
                          deviceName:
                            description: Device name
                            type: string
                          encrypted:
                            description: Encrypted is whether the volume should be
                              encrypted or not.
                            type: boolean
                          encryptionKey:
                            description: EncryptionKey is the KMS key to use to encrypt
                              the volume. Can be either a KMS key ID or ARN. If Encrypted
                              is set and this is omitted, the default AWS key will
                              be used. The key must already exist and be accessible
                              by the controller.
                            type: string
                          iops:
                            description: IOPS is the number of IOPS requested for
                              the disk. Not applicable to all types.
                            format: int64
                            type: integer
                          size:
                            description: Size specifies size (in Gi) of the storage
                              device. Must be greater than the image snapshot size
                              or 8 (whichever is greater).
                            format: int64
                            minimum: 8
                            type: integer
                          type:
                            description: Type is the type of the volume (e.g. gp2,
                              io1, etc...).
                            type: string
                        required:
                        - size
                        type: object
                      spotMarketOptions:
                        description: SpotMarketOptions allows users to configure instances
                          to be run using AWS Spot instances.
                        properties:
                          maxPrice:
                            description: MaxPrice defines the maximum price the user
                              is willing to pay for Spot VM instances
                            type: string
                        type: object
                      sshKeyName:
                        description: SSHKeyName is the name of the ssh key to attach
                          to the instance. Valid values are empty string (do not use
                          SSH keys), a valid SSH key name, or omitted (use the default
                          SSH key name)
                        type: string
                      subnet:
                        description: Subnet is a reference to the subnet to use for
                          this instance. If not specified, the cluster subnet will
                          be used.
                        properties:
                          arn:
                            description: ARN of resource
                            type: string
                          filters:
                            description: 'Filters is a set of key/value pairs used
                              to identify a resource They are applied according to
                              the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                            items:
                              description: Filter is a filter used to identify an
                                AWS resource
                              properties:
                                name:
                                  description: Name of the filter. Filter names are
                                    case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter
                                    values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - name
                              - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      tenancy:
                        description: Tenancy indicates if instance should run on shared
                          or single-tenant hardware.
                        enum:
                        - default
                        - dedicated
                        - host
                        type: string
                      uncompressedUserData:
                        description: UncompressedUserData specify whether the user
                          data is gzip-compressed before it is sent to ec2 instance.
                          cloud-init has built-in support for gzip-compressed user
                          data user data stored in aws secret manager is always gzip-compressed.
                        type: boolean
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: false
  - name: v1alpha4
    schema:
      openAPIV3Schema:
        description: AWSMachineTemplate is the Schema for the awsmachinetemplates
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate
            properties:
              template:
                description: AWSMachineTemplateResource describes the data needed
                  to create am AWSMachine from a template
                properties:
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      additionalSecurityGroups:
                        description: AdditionalSecurityGroups is an array of references
                          to security groups that should be applied to the instance.
                          These security groups would be set in addition to any security
                          groups defined at the cluster level or in the actuator.
                          It is possible to specify either IDs of Filters. Using Filters
                          will cause additional requests to AWS API and if tags change
                          the attached security groups might change too.
                        items:
                          description: AWSResourceReference is a reference to a specific
                            AWS resource by ID, ARN, or filters. Only one of ID, ARN
                            or Filters may be specified. Specifying more than one
                            will result in a validation error.
                          properties:
                            arn:
                              description: ARN of resource
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used
                                to identify a resource They are applied according
                                to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource
                                properties:
                                  name:
                                    description: Name of the filter. Filter names
                                      are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        type: array
                      additionalTags:
                        additionalProperties:
                          type: string
                        description: AdditionalTags is an optional set of tags to
                          add to an instance, in addition to the ones added by default
                          by the AWS provider. If both the AWSCluster and the AWSMachine
                          specify the same tag name with different values, the AWSMachine's
                          value takes precedence.
                        type: object
                      ami:
                        description: AMI is the reference to the AMI from which to
                          create the machine instance.
                        properties:
                          eksLookupType:
                            description: EKSOptimizedLookupType If specified, will
                              look up an EKS Optimized image in SSM Parameter store
                            enum:
                            - AmazonLinux
                            - AmazonLinuxGPU
                            type: string
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      cloudInit:
                        description: CloudInit defines options related to the bootstrapping
                          systems where CloudInit is used.
                        properties:
                          insecureSkipSecretsManager:
                            description: InsecureSkipSecretsManager, when set to true
                              will not use AWS Secrets Manager or AWS Systems Manager
                              Parameter Store to ensure privacy of userdata. By default,
                              a cloud-init boothook shell script is prepended to download
                              the userdata from Secrets Manager and additionally delete
                              the secret.
                            type: boolean
                          secretCount:
                            description: SecretCount is the number of secrets used
                              to form the complete secret
                            format: int32
                            type: integer
                          secretPrefix:
                            description: SecretPrefix is the prefix for the secret
                              name. This is stored temporarily, and deleted when the
                              machine registers as a node against the workload cluster.
                            type: string
                          secureSecretsBackend:
                            description: SecureSecretsBackend, when set to parameter-store
                              will utilize the AWS Systems Manager Parameter Storage
                              to distribute secrets. By default or with the value
                              of secrets-manager, will use AWS Secrets Manager instead.
                            enum:
                            - secrets-manager
                            - ssm-parameter-store
                            type: string
                        type: object
                      failureDomain:
                        description: FailureDomain is the failure domain unique identifier
                          this Machine should be attached to, as defined in Cluster
                          API. For this infrastructure provider, the ID is equivalent
                          to an AWS Availability Zone. If multiple subnets are matched
                          for the availability zone, the first one returned is picked.
                        type: string
                      iamInstanceProfile:
                        description: IAMInstanceProfile is a name of an IAM instance
                          profile to assign to the instance
                        type: string
                      imageLookupBaseOS:
                        description: ImageLookupBaseOS is the name of the base operating
                          system to use for image lookup the AMI is not set.
                        type: string
                      imageLookupFormat:
                        description: 'ImageLookupFormat is the AMI naming format to
                          look up the image for this machine It will be ignored if
                          an explicit AMI is set. Supports substitutions for {{.BaseOS}}
                          and {{.K8sVersion}} with the base OS and kubernetes version,
                          respectively. The BaseOS will be the value in ImageLookupBaseOS
                          or ubuntu (the default), and the kubernetes version as defined
                          by the packages produced by kubernetes/release without v
                          as a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example,
                          the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                          will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                          for a Machine that is targeting kubernetes v1.18.0 and the
                          ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                        type: string
                      imageLookupOrg:
                        description: ImageLookupOrg is the AWS Organization ID to
                          use for image lookup if AMI is not set.
                        type: string
                      instanceID:
                        description: InstanceID is the EC2 instance ID for this machine.
                        type: string
                      instanceType:
                        description: 'InstanceType is the type of instance to create.
                          Example: m4.xlarge'
                        minLength: 2
                        type: string
                      networkInterfaces:
                        description: NetworkInterfaces is a list of ENIs to associate
                          with the instance. A maximum of 2 may be specified.
                        items:
                          type: string
                        maxItems: 2
                        type: array
                      nonRootVolumes:
                        description: Configuration options for the non root storage
                          volumes.
                        items:
                          description: Volume encapsulates the configuration options
                            for the storage device
                          properties:
                            deviceName:
                              description: Device name
                              type: string
                            encrypted:
                              description: Encrypted is whether the volume should
                                be encrypted or not.
                              type: boolean
                            encryptionKey:
                              description: EncryptionKey is the KMS key to use to
                                encrypt the volume. Can be either a KMS key ID or
                                ARN. If Encrypted is set and this is omitted, the
                                default AWS key will be used. The key must already
                                exist and be accessible by the controller.
                              type: string
                            iops:
                              description: IOPS is the number of IOPS requested for
                                the disk. Not applicable to all types.
                              format: int64
                              type: integer
                            size:
                              description: Size specifies size (in Gi) of the storage
                                device. Must be greater than the image snapshot size
                                or 8 (whichever is greater).
                              format: int64
                              minimum: 8
                              type: integer
                            throughput:
                              description: Throughput to provision in MiB/s supported
                                for the volume type. Not applicable to all types.
                              format: int64
                              type: integer
                            type:
                              description: Type is the type of the volume (e.g. gp2,
                                io1, etc...).
                              type: string
                          required:
                          - size
                          type: object
                        type: array
                      providerID:
                        description: ProviderID is the unique identifier as specified
                          by the cloud provider.
                        type: string
                      publicIP:
                        description: 'PublicIP specifies whether the instance should
                          get a public IP. Precedence for this setting is as follows:
                          1. This field if set 2. Cluster/flavor setting 3. Subnet
                          default'
                        type: boolean
                      rootVolume:
                        description: RootVolume encapsulates the configuration options
                          for the root volume
                        properties:
                          deviceName:
                            description: Device name
                            type: string
                          encrypted:
                            description: Encrypted is whether the volume should be
                              encrypted or not.
                            type: boolean
                          encryptionKey:
                            description: EncryptionKey is the KMS key to use to encrypt
                              the volume. Can be either a KMS key ID or ARN. If Encrypted
                              is set and this is omitted, the default AWS key will
                              be used. The key must already exist and be accessible
                              by the controller.
                            type: string
                          iops:
                            description: IOPS is the number of IOPS requested for
                              the disk. Not applicable to all types.
                            format: int64
                            type: integer
                          size:
                            description: Size specifies size (in Gi) of the storage
                              device. Must be greater than the image snapshot size
                              or 8 (whichever is greater).
                            format: int64
                            minimum: 8
                            type: integer
                          throughput:
                            description: Throughput to provision in MiB/s supported
                              for the volume type. Not applicable to all types.
                            format: int64
                            type: integer
                          type:
                            description: Type is the type of the volume (e.g. gp2,
                              io1, etc...).
                            type: string
                        required:
                        - size
                        type: object
                      spotMarketOptions:
                        description: SpotMarketOptions allows users to configure instances
                          to be run using AWS Spot instances.
                        properties:
                          maxPrice:
                            description: MaxPrice defines the maximum price the user
                              is willing to pay for Spot VM instances
                            type: string
                        type: object
                      sshKeyName:
                        description: SSHKeyName is the name of the ssh key to attach
                          to the instance. Valid values are empty string (do not use
                          SSH keys), a valid SSH key name, or omitted (use the default
                          SSH key name)
                        type: string
                      subnet:
                        description: Subnet is a reference to the subnet to use for
                          this instance. If not specified, the cluster subnet will
                          be used.
                        properties:
                          arn:
                            description: ARN of resource
                            type: string
                          filters:
                            description: 'Filters is a set of key/value pairs used
                              to identify a resource They are applied according to
                              the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                            items:
                              description: Filter is a filter used to identify an
                                AWS resource
                              properties:
                                name:
                                  description: Name of the filter. Filter names are
                                    case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter
                                    values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - name
                              - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      tenancy:
                        description: Tenancy indicates if instance should run on shared
                          or single-tenant hardware.
                        enum:
                        - default
                        - dedicated
                        - host
                        type: string
                      uncompressedUserData:
                        description: UncompressedUserData specify whether the user
                          data is gzip-compressed before it is sent to ec2 instance.
                          cloud-init has built-in support for gzip-compressed user
                          data user data stored in aws secret manager is always gzip-compressed.
                        type: boolean
                    required:
                    - instanceType
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: false
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: AWSMachineTemplate is the schema for the Amazon EC2 Machine Templates
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AWSMachineTemplateSpec defines the desired state of AWSMachineTemplate.
            properties:
              template:
                description: AWSMachineTemplateResource describes the data needed
                  to create am AWSMachine from a template.
                properties:
                  metadata:
                    description: 'Standard object''s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata'
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: 'Annotations is an unstructured key value map
                          stored with a resource that may be set by external tools
                          to store and retrieve arbitrary metadata. They are not queryable
                          and should be preserved when modifying objects. More info:
                          http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: 'Map of string keys and values that can be used
                          to organize and categorize (scope and select) objects. May
                          match selectors of replication controllers and services.
                          More info: http://kubernetes.io/docs/user-guide/labels'
                        type: object
                    type: object
                  spec:
                    description: Spec is the specification of the desired behavior
                      of the machine.
                    properties:
                      additionalSecurityGroups:
                        description: AdditionalSecurityGroups is an array of references
                          to security groups that should be applied to the instance.
                          These security groups would be set in addition to any security
                          groups defined at the cluster level or in the actuator.
                          It is possible to specify either IDs of Filters. Using Filters
                          will cause additional requests to AWS API and if tags change
                          the attached security groups might change too.
                        items:
                          description: AWSResourceReference is a reference to a specific
                            AWS resource by ID or filters. Only one of ID or Filters
                            may be specified. Specifying more than one will result
                            in a validation error.
                          properties:
                            arn:
                              description: 'ARN of resource. Deprecated: This field
                                has no function and is going to be removed in the
                                next release.'
                              type: string
                            filters:
                              description: 'Filters is a set of key/value pairs used
                                to identify a resource They are applied according
                                to the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                              items:
                                description: Filter is a filter used to identify an
                                  AWS resource.
                                properties:
                                  name:
                                    description: Name of the filter. Filter names
                                      are case-sensitive.
                                    type: string
                                  values:
                                    description: Values includes one or more filter
                                      values. Filter values are case-sensitive.
                                    items:
                                      type: string
                                    type: array
                                required:
                                - name
                                - values
                                type: object
                              type: array
                            id:
                              description: ID of resource
                              type: string
                          type: object
                        type: array
                      additionalTags:
                        additionalProperties:
                          type: string
                        description: AdditionalTags is an optional set of tags to
                          add to an instance, in addition to the ones added by default
                          by the AWS provider. If both the AWSCluster and the AWSMachine
                          specify the same tag name with different values, the AWSMachine's
                          value takes precedence.
                        type: object
                      ami:
                        description: AMI is the reference to the AMI from which to
                          create the machine instance.
                        properties:
                          eksLookupType:
                            description: EKSOptimizedLookupType If specified, will
                              look up an EKS Optimized image in SSM Parameter store
                            enum:
                            - AmazonLinux
                            - AmazonLinuxGPU
                            type: string
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      cloudInit:
                        description: CloudInit defines options related to the bootstrapping
                          systems where CloudInit is used.
                        properties:
                          insecureSkipSecretsManager:
                            description: InsecureSkipSecretsManager, when set to true
                              will not use AWS Secrets Manager or AWS Systems Manager
                              Parameter Store to ensure privacy of userdata. By default,
                              a cloud-init boothook shell script is prepended to download
                              the userdata from Secrets Manager and additionally delete
                              the secret.
                            type: boolean
                          secretCount:
                            description: SecretCount is the number of secrets used
                              to form the complete secret
                            format: int32
                            type: integer
                          secretPrefix:
                            description: SecretPrefix is the prefix for the secret
                              name. This is stored temporarily, and deleted when the
                              machine registers as a node against the workload cluster.
                            type: string
                          secureSecretsBackend:
                            description: SecureSecretsBackend, when set to parameter-store
                              will utilize the AWS Systems Manager Parameter Storage
                              to distribute secrets. By default or with the value
                              of secrets-manager, will use AWS Secrets Manager instead.
                            enum:
                            - secrets-manager
                            - ssm-parameter-store
                            type: string
                        type: object
                      failureDomain:
                        description: FailureDomain is the failure domain unique identifier
                          this Machine should be attached to, as defined in Cluster
                          API. For this infrastructure provider, the ID is equivalent
                          to an AWS Availability Zone. If multiple subnets are matched
                          for the availability zone, the first one returned is picked.
                        type: string
                      iamInstanceProfile:
                        description: IAMInstanceProfile is a name of an IAM instance
                          profile to assign to the instance
                        type: string
                      ignition:
                        description: Ignition defined options related to the bootstrapping
                          systems where Ignition is used.
                        properties:
                          version:
                            default: "2.3"
                            description: Version defines which version of Ignition
                              will be used to generate bootstrap data.
                            enum:
                            - "2.3"
                            type: string
                        type: object
                      imageLookupBaseOS:
                        description: ImageLookupBaseOS is the name of the base operating
                          system to use for image lookup the AMI is not set.
                        type: string
                      imageLookupFormat:
                        description: 'ImageLookupFormat is the AMI naming format to
                          look up the image for this machine It will be ignored if
                          an explicit AMI is set. Supports substitutions for {{.BaseOS}}
                          and {{.K8sVersion}} with the base OS and kubernetes version,
                          respectively. The BaseOS will be the value in ImageLookupBaseOS
                          or ubuntu (the default), and the kubernetes version as defined
                          by the packages produced by kubernetes/release without v
                          as a prefix: 1.13.0, 1.12.5-mybuild.1, or 1.17.3. For example,
                          the default image format of capa-ami-{{.BaseOS}}-?{{.K8sVersion}}-*
                          will end up searching for AMIs that match the pattern capa-ami-ubuntu-?1.18.0-*
                          for a Machine that is targeting kubernetes v1.18.0 and the
                          ubuntu base OS. See also: https://golang.org/pkg/text/template/'
                        type: string
                      imageLookupOrg:
                        description: ImageLookupOrg is the AWS Organization ID to
                          use for image lookup if AMI is not set.
                        type: string
                      instanceID:
                        description: InstanceID is the EC2 instance ID for this machine.
                        type: string
                      instanceType:
                        description: 'InstanceType is the type of instance to create.
                          Example: m4.xlarge'
                        minLength: 2
                        type: string
                      networkInterfaces:
                        description: NetworkInterfaces is a list of ENIs to associate
                          with the instance. A maximum of 2 may be specified.
                        items:
                          type: string
                        maxItems: 2
                        type: array
                      nonRootVolumes:
                        description: Configuration options for the non root storage
                          volumes.
                        items:
                          description: Volume encapsulates the configuration options
                            for the storage device.
                          properties:
                            deviceName:
                              description: Device name
                              type: string
                            encrypted:
                              description: Encrypted is whether the volume should
                                be encrypted or not.
                              type: boolean
                            encryptionKey:
                              description: EncryptionKey is the KMS key to use to
                                encrypt the volume. Can be either a KMS key ID or
                                ARN. If Encrypted is set and this is omitted, the
                                default AWS key will be used. The key must already
                                exist and be accessible by the controller.
                              type: string
                            iops:
                              description: IOPS is the number of IOPS requested for
                                the disk. Not applicable to all types.
                              format: int64
                              type: integer
                            size:
                              description: Size specifies size (in Gi) of the storage
                                device. Must be greater than the image snapshot size
                                or 8 (whichever is greater).
                              format: int64
                              minimum: 8
                              type: integer
                            throughput:
                              description: Throughput to provision in MiB/s supported
                                for the volume type. Not applicable to all types.
                              format: int64
                              type: integer
                            type:
                              description: Type is the type of the volume (e.g. gp2,
                                io1, etc...).
                              type: string
                          required:
                          - size
                          type: object
                        type: array
                      providerID:
                        description: ProviderID is the unique identifier as specified
                          by the cloud provider.
                        type: string
                      publicIP:
                        description: 'PublicIP specifies whether the instance should
                          get a public IP. Precedence for this setting is as follows:
                          1. This field if set 2. Cluster/flavor setting 3. Subnet
                          default'
                        type: boolean
                      rootVolume:
                        description: RootVolume encapsulates the configuration options
                          for the root volume
                        properties:
                          deviceName:
                            description: Device name
                            type: string
                          encrypted:
                            description: Encrypted is whether the volume should be
                              encrypted or not.
                            type: boolean
                          encryptionKey:
                            description: EncryptionKey is the KMS key to use to encrypt
                              the volume. Can be either a KMS key ID or ARN. If Encrypted
                              is set and this is omitted, the default AWS key will
                              be used. The key must already exist and be accessible
                              by the controller.
                            type: string
                          iops:
                            description: IOPS is the number of IOPS requested for
                              the disk. Not applicable to all types.
                            format: int64
                            type: integer
                          size:
                            description: Size specifies size (in Gi) of the storage
                              device. Must be greater than the image snapshot size
                              or 8 (whichever is greater).
                            format: int64
                            minimum: 8
                            type: integer
                          throughput:
                            description: Throughput to provision in MiB/s supported
                              for the volume type. Not applicable to all types.
                            format: int64
                            type: integer
                          type:
                            description: Type is the type of the volume (e.g. gp2,
                              io1, etc...).
                            type: string
                        required:
                        - size
                        type: object
                      spotMarketOptions:
                        description: SpotMarketOptions allows users to configure instances
                          to be run using AWS Spot instances.
                        properties:
                          maxPrice:
                            description: MaxPrice defines the maximum price the user
                              is willing to pay for Spot VM instances
                            type: string
                        type: object
                      sshKeyName:
                        description: SSHKeyName is the name of the ssh key to attach
                          to the instance. Valid values are empty string (do not use
                          SSH keys), a valid SSH key name, or omitted (use the default
                          SSH key name)
                        type: string
                      subnet:
                        description: Subnet is a reference to the subnet to use for
                          this instance. If not specified, the cluster subnet will
                          be used.
                        properties:
                          arn:
                            description: 'ARN of resource. Deprecated: This field
                              has no function and is going to be removed in the next
                              release.'
                            type: string
                          filters:
                            description: 'Filters is a set of key/value pairs used
                              to identify a resource They are applied according to
                              the rules defined by the AWS API: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/Using_Filtering.html'
                            items:
                              description: Filter is a filter used to identify an
                                AWS resource.
                              properties:
                                name:
                                  description: Name of the filter. Filter names are
                                    case-sensitive.
                                  type: string
                                values:
                                  description: Values includes one or more filter
                                    values. Filter values are case-sensitive.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - name
                              - values
                              type: object
                            type: array
                          id:
                            description: ID of resource
                            type: string
                        type: object
                      tenancy:
                        description: Tenancy indicates if instance should run on shared
                          or single-tenant hardware.
                        enum:
                        - default
                        - dedicated
                        - host
                        type: string
                      uncompressedUserData:
                        description: UncompressedUserData specify whether the user
                          data is gzip-compressed before it is sent to ec2 instance.
                          cloud-init has built-in support for gzip-compressed user
                          data user data stored in aws secret manager is always gzip-compressed.
                        type: boolean
                    required:
                    - instanceType
                    type: object
                required:
                - spec
                type: object
            required:
            - template
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
